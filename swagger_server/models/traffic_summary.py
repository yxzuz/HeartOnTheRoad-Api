# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TrafficSummary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, number_of_records: float=None, max_heartrate: float=None, min_heartrate: float=None, average_heartrate: float=None, average_speed: float=None, average_travel_time: float=None):  # noqa: E501
        """TrafficSummary - a model defined in Swagger

        :param number_of_records: The number_of_records of this TrafficSummary.  # noqa: E501
        :type number_of_records: float
        :param max_heartrate: The max_heartrate of this TrafficSummary.  # noqa: E501
        :type max_heartrate: float
        :param min_heartrate: The min_heartrate of this TrafficSummary.  # noqa: E501
        :type min_heartrate: float
        :param average_heartrate: The average_heartrate of this TrafficSummary.  # noqa: E501
        :type average_heartrate: float
        :param average_speed: The average_speed of this TrafficSummary.  # noqa: E501
        :type average_speed: float
        :param average_travel_time: The average_travel_time of this TrafficSummary.  # noqa: E501
        :type average_travel_time: float
        """
        self.swagger_types = {
            'number_of_records': float,
            'max_heartrate': float,
            'min_heartrate': float,
            'average_heartrate': float,
            'average_speed': float,
            'average_travel_time': float
        }

        self.attribute_map = {
            'number_of_records': 'number_of_records',
            'max_heartrate': 'max_heartrate',
            'min_heartrate': 'min_heartrate',
            'average_heartrate': 'average_heartrate',
            'average_speed': 'average_speed',
            'average_travel_time': 'average_travel_time'
        }
        self._number_of_records = number_of_records
        self._max_heartrate = max_heartrate
        self._min_heartrate = min_heartrate
        self._average_heartrate = average_heartrate
        self._average_speed = average_speed
        self._average_travel_time = average_travel_time

    @classmethod
    def from_dict(cls, dikt) -> 'TrafficSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_6 of this TrafficSummary.  # noqa: E501
        :rtype: TrafficSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_records(self) -> float:
        """Gets the number_of_records of this TrafficSummary.


        :return: The number_of_records of this TrafficSummary.
        :rtype: float
        """
        return self._number_of_records

    @number_of_records.setter
    def number_of_records(self, number_of_records: float):
        """Sets the number_of_records of this TrafficSummary.


        :param number_of_records: The number_of_records of this TrafficSummary.
        :type number_of_records: float
        """

        self._number_of_records = number_of_records

    @property
    def max_heartrate(self) -> float:
        """Gets the max_heartrate of this TrafficSummary.


        :return: The max_heartrate of this TrafficSummary.
        :rtype: float
        """
        return self._max_heartrate

    @max_heartrate.setter
    def max_heartrate(self, max_heartrate: float):
        """Sets the max_heartrate of this TrafficSummary.


        :param max_heartrate: The max_heartrate of this TrafficSummary.
        :type max_heartrate: float
        """

        self._max_heartrate = max_heartrate

    @property
    def min_heartrate(self) -> float:
        """Gets the min_heartrate of this TrafficSummary.


        :return: The min_heartrate of this TrafficSummary.
        :rtype: float
        """
        return self._min_heartrate

    @min_heartrate.setter
    def min_heartrate(self, min_heartrate: float):
        """Sets the min_heartrate of this TrafficSummary.


        :param min_heartrate: The min_heartrate of this TrafficSummary.
        :type min_heartrate: float
        """

        self._min_heartrate = min_heartrate

    @property
    def average_heartrate(self) -> float:
        """Gets the average_heartrate of this TrafficSummary.


        :return: The average_heartrate of this TrafficSummary.
        :rtype: float
        """
        return self._average_heartrate

    @average_heartrate.setter
    def average_heartrate(self, average_heartrate: float):
        """Sets the average_heartrate of this TrafficSummary.


        :param average_heartrate: The average_heartrate of this TrafficSummary.
        :type average_heartrate: float
        """

        self._average_heartrate = average_heartrate

    @property
    def average_speed(self) -> float:
        """Gets the average_speed of this TrafficSummary.


        :return: The average_speed of this TrafficSummary.
        :rtype: float
        """
        return self._average_speed

    @average_speed.setter
    def average_speed(self, average_speed: float):
        """Sets the average_speed of this TrafficSummary.


        :param average_speed: The average_speed of this TrafficSummary.
        :type average_speed: float
        """

        self._average_speed = average_speed

    @property
    def average_travel_time(self) -> float:
        """Gets the average_travel_time of this TrafficSummary.


        :return: The average_travel_time of this TrafficSummary.
        :rtype: float
        """
        return self._average_travel_time

    @average_travel_time.setter
    def average_travel_time(self, average_travel_time: float):
        """Sets the average_travel_time of this TrafficSummary.


        :param average_travel_time: The average_travel_time of this TrafficSummary.
        :type average_travel_time: float
        """

        self._average_travel_time = average_travel_time
