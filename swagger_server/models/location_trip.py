# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LocationTrip(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, latitude: float=None, longitude: float=None, current_speed: float=None, free_flow_speed: float=None):  # noqa: E501
        """LocationTrip - a model defined in Swagger

        :param latitude: The latitude of this LocationTrip.  # noqa: E501
        :type latitude: float
        :param longitude: The longitude of this LocationTrip.  # noqa: E501
        :type longitude: float
        :param current_speed: The current_speed of this LocationTrip.  # noqa: E501
        :type current_speed: float
        :param free_flow_speed: The free_flow_speed of this LocationTrip.  # noqa: E501
        :type free_flow_speed: float
        """
        self.swagger_types = {
            'latitude': float,
            'longitude': float,
            'current_speed': float,
            'free_flow_speed': float
        }

        self.attribute_map = {
            'latitude': 'latitude',
            'longitude': 'longitude',
            'current_speed': 'currentSpeed',
            'free_flow_speed': 'freeFlowSpeed'
        }
        self._latitude = latitude
        self._longitude = longitude
        self._current_speed = current_speed
        self._free_flow_speed = free_flow_speed

    @classmethod
    def from_dict(cls, dikt) -> 'LocationTrip':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_4 of this LocationTrip.  # noqa: E501
        :rtype: LocationTrip
        """
        return util.deserialize_model(dikt, cls)

    @property
    def latitude(self) -> float:
        """Gets the latitude of this LocationTrip.


        :return: The latitude of this LocationTrip.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: float):
        """Sets the latitude of this LocationTrip.


        :param latitude: The latitude of this LocationTrip.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self) -> float:
        """Gets the longitude of this LocationTrip.


        :return: The longitude of this LocationTrip.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: float):
        """Sets the longitude of this LocationTrip.


        :param longitude: The longitude of this LocationTrip.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def current_speed(self) -> float:
        """Gets the current_speed of this LocationTrip.


        :return: The current_speed of this LocationTrip.
        :rtype: float
        """
        return self._current_speed

    @current_speed.setter
    def current_speed(self, current_speed: float):
        """Sets the current_speed of this LocationTrip.


        :param current_speed: The current_speed of this LocationTrip.
        :type current_speed: float
        """

        self._current_speed = current_speed

    @property
    def free_flow_speed(self) -> float:
        """Gets the free_flow_speed of this LocationTrip.


        :return: The free_flow_speed of this LocationTrip.
        :rtype: float
        """
        return self._free_flow_speed

    @free_flow_speed.setter
    def free_flow_speed(self, free_flow_speed: float):
        """Sets the free_flow_speed of this LocationTrip.


        :param free_flow_speed: The free_flow_speed of this LocationTrip.
        :type free_flow_speed: float
        """

        self._free_flow_speed = free_flow_speed
