# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AnalyticRelation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, heartrate: float=None, ratio: float=None):  # noqa: E501
        """AnalyticRelation - a model defined in Swagger

        :param heartrate: The heartrate of this AnalyticRelation.  # noqa: E501
        :type heartrate: float
        :param ratio: The ratio of this AnalyticRelation.  # noqa: E501
        :type ratio: float
        """
        self.swagger_types = {
            'heartrate': float,
            'ratio': float
        }

        self.attribute_map = {
            'heartrate': 'heartrate',
            'ratio': 'ratio'
        }
        self._heartrate = heartrate
        self._ratio = ratio

    @classmethod
    def from_dict(cls, dikt) -> 'AnalyticRelation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_1 of this AnalyticRelation.  # noqa: E501
        :rtype: AnalyticRelation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def heartrate(self) -> float:
        """Gets the heartrate of this AnalyticRelation.


        :return: The heartrate of this AnalyticRelation.
        :rtype: float
        """
        return self._heartrate

    @heartrate.setter
    def heartrate(self, heartrate: float):
        """Sets the heartrate of this AnalyticRelation.


        :param heartrate: The heartrate of this AnalyticRelation.
        :type heartrate: float
        """

        self._heartrate = heartrate

    @property
    def ratio(self) -> float:
        """Gets the ratio of this AnalyticRelation.

        Ratio of current speed to free-flow speed  # noqa: E501

        :return: The ratio of this AnalyticRelation.
        :rtype: float
        """
        return self._ratio

    @ratio.setter
    def ratio(self, ratio: float):
        """Sets the ratio of this AnalyticRelation.

        Ratio of current speed to free-flow speed  # noqa: E501

        :param ratio: The ratio of this AnalyticRelation.
        :type ratio: float
        """

        self._ratio = ratio
